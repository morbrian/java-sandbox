<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>morbrian.java-sandbox</groupId>
  <artifactId>java-sandbox</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <version.java>1.8</version.java>
    <version.maven.compiler.plugin>3.3</version.maven.compiler.plugin>
    <version.maven.war.plugin>2.6</version.maven.war.plugin>
    <version.maven.checkstyle.plugin>2.17</version.maven.checkstyle.plugin>
    <version.maven.enunciate.plugin>2.1.1</version.maven.enunciate.plugin>
    <version.maven.dependency.plugin>2.10</version.maven.dependency.plugin>
    <version.httpclient>4.5</version.httpclient>
    <version.javaee>7.0</version.javaee>
    <version.junit>4.11</version.junit>
    <version.dbunit>2.5.1</version.dbunit>
    <version.jackson>2.6.4</version.jackson>
    <version.hadoop-common>2.7.1</version.hadoop-common>
    <version.typesafe-config>1.3.0</version.typesafe-config>
    <version.hive-jdbc>1.2.1</version.hive-jdbc>
    <version.slf4j>1.7.12</version.slf4j>
    <version.logback>1.1.3</version.logback>
    <version.h2>1.4.190</version.h2>
    <version.postgresql>9.4-1206-jdbc42</version.postgresql>
    <version.opencsv>3.4</version.opencsv>
    <version.arquillian>1.1.10.Final</version.arquillian>
    <version.maven.surefire.plugin>2.19</version.maven.surefire.plugin>
    <version.maven.failsafe.plugin>2.19</version.maven.failsafe.plugin>
    <version.wildfly>9.0.2.Final</version.wildfly>
    <version.wildfly.domain.management>2.0.4.Final</version.wildfly.domain.management>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>${version.javaee}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${version.httpclient}</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${version.opencsv}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hive</groupId>
        <artifactId>hive-jdbc</artifactId>
        <version>${version.hive-jdbc}</version>
      </dependency>
      <dependency>
        <groupId>com.typesafe</groupId>
        <artifactId>config</artifactId>
        <version>${version.typesafe-config}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${version.hadoop-common}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${version.slf4j}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${version.h2}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${version.postgresql}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${version.junit}</version>
      </dependency>
      <dependency>
        <groupId>org.dbunit</groupId>
        <artifactId>dbunit</artifactId>
        <version>${version.dbunit}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${version.logback}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.arquillian</groupId>
        <artifactId>arquillian-bom</artifactId>
        <version>${version.arquillian}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven.compiler.plugin}</version>
          <configuration>
            <source>${version.java}</source>
            <target>${version.java}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${version.maven.war.plugin}</version>
          <configuration>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.maven.checkstyle.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>morbrian.java-sandbox</groupId>
              <artifactId>build-tools</artifactId>
              <version>1.0-SNAPSHOT</version>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.maven.checkstyle.plugin}</version>
        <configuration>
          <configLocation>java-sandbox/google_checks.xml</configLocation>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <modules>
    <module>build-tools</module>
    <module>java-closures</module>
    <module>java-crypto</module>
    <module>j2ee-http-request-dump</module>
    <module>j2ee-jaxrs-cookies</module>
    <module>j2ee-jdbc-query</module>
    <module>j2ee-jdbc-test-tools</module>
    <module>j2ee-jpa-basics</module>
    <module>j2ee-rdbms2hive</module>
    <module>hdp-hive-basics</module>
    <module>j2ee-javascript-tricks</module>
  </modules>

  <profiles>
    <profile>
      <id>wildfy902-embedded</id>
      <activation>
        <file>
          <exists>${basedir}/src/test/.embedded-marker</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.wildfly.arquillian</groupId>
          <artifactId>wildfly-arquillian-container-embedded</artifactId>
          <version>1.0.2.Final</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.wildfly</groupId>
          <artifactId>wildfly-embedded</artifactId>
          <version>${version.wildfly}</version>
        </dependency>
        <dependency>
          <groupId>org.jboss.arquillian.junit</groupId>
          <artifactId>arquillian-junit-container</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.wildfly.core</groupId>
          <artifactId>wildfly-domain-management</artifactId>
          <version>${version.wildfly.domain.management}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <finalName>${project.artifactId}</finalName>
        <testResources>
          <!--<testResource>-->
            <!--<directory>src/test/resources</directory>-->
          <!--</testResource>-->
          <testResource>
            <directory>src/test/resources-wildfly-embedded</directory>
          </testResource>
        </testResources>
        <plugins>
          <!-- You need the maven dependency plugin to download locally a zip with the server, unless you provide your own, it will download under the /target directory -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>${version.maven.dependency.plugin}</version>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>process-test-classes</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.wildfly</groupId>
                      <artifactId>wildfly-dist</artifactId>
                      <version>${version.wildfly}</version>
                      <type>zip</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>target</outputDirectory>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${version.maven.surefire.plugin}</version>
            <configuration>
              <!-- Fork every test because it will launch a separate AS instance -->
              <forkMode>always</forkMode>
              <environmentVariables>
                <JBOSS_HOME>${project.basedir}/target/wildfly-${version.wildfly}</JBOSS_HOME>
              </environmentVariables>
              <systemPropertyVariables>
                <java.util.logging.manager>org.jboss.logmanager.LogManager
                </java.util.logging.manager>
                <!-- the maven dependency plugin will have already downloaded the server on /target -->
                <jboss.home>${project.basedir}/target/wildfly-${version.wildfly}</jboss.home>
                <module.path>${project.basedir}/target/wildfly-${version.wildfly}/modules
                </module.path>
                <jboss.socket.binding.port-offset>101</jboss.socket.binding.port-offset>
              </systemPropertyVariables>
              <redirectTestOutputToFile>false</redirectTestOutputToFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
